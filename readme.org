Embedded UI generator

Generate an HTML UI at compile-time which can display and edit a single rust struct.
* install / run

cargo install --locked --root ".cargo-installed/" --version 0.18.0 trunk

cd frontend
trunk build
toast dev-frontend

* roadmap

x control a single LED via editing an rgb struct with <input type="numeric" min="0" max="255">
x add two-variant enum, Off and On(RGB{...})

usable entirely through crate

- copy so wasm-bindgen doesn't need to be installed by user? https://github.com/jakobhellermann/wasm-server-runner/blob/main/src/wasm_bindgen.rs

- derive macro https://stackoverflow.com/questions/51310731/can-a-procedural-macro-derive-on-a-struct-add-other-derives
* implementation options

JSON Schema generated on rust types via https://docs.rs/schemars/latest/schemars/ 
then generate UI
- jQuery forms http://www.alpacajs.org/
- react https://rjsf-team.github.io/react-jsonschema-form/
  - this doesn't quite get enum variant UI right.

JSONSchema discussion of form generation use case: https://github.com/orgs/json-schema-org/discussions/70

reflecting on how serde / bincode would pack a type: https://crates.io/crates/serde-reflection

postcard + schema? https://github.com/jamesmunns/postcard/issues/92


similar-ish idea in Rust: UI controls defined in firmware for a web UI: https://github.com/spookyvision/embedded-web-ui
