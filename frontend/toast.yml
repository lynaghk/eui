image: ubuntu:22.04
command_prefix: set -euo pipefail
tasks:

  compile:
    cache: false
    location: /code/
    dependencies:
      - install-project-deps
    mount_paths:
      - .
    command: |
      sass src/style.sass resources/public/style.css

      npm install --no-audit # run this to make sure local node_modules is up to date with lockfile.

      rm -rf dist/js/cljs-runtime # don't need this for release build, it's just leftovers from dev builds
      clojure -M:shadow-cljs release frontend


  dev-frontend:
    cache: false
    location: /code/
    dependencies:
      - install-project-deps
    mount_paths:
      - .
    command: |
      # sass --watch src/style.sass resources/public/style.css &
      clojure -M:shadow-cljs watch frontend
    ports:
      - 9631:9631 # shadow cljs reloading connection
      - 9090:9090 # static http server


  install_base_deps:
    command: |
       #!/usr/bin/env bash
       set -euo pipefail


       ########################
       # OS and basic programs

       apt-get update
       apt-get install -y --no-install-recommends binutils build-essential ca-certificates curl wget openjdk-18-jdk-headless libssl-dev pkg-config


       ##################
       # Dart Sass

       case $(uname -m) in
       aarch64)
       SASS_URL=https://github.com/sass/dart-sass/releases/download/1.54.5/dart-sass-1.54.5-linux-arm64.tar.gz
       ;;

       x86_64)
       SASS_URL=https://github.com/sass/dart-sass/releases/download/1.54.5/dart-sass-1.54.5-linux-x64.tar.gz
       ;;
       *)
       echo "Unknown architecture"
       exit 1
       ;;
       esac

       wget -O - "$SASS_URL" | tar xOvzf - dart-sass/sass > /usr/local/bin/sass
       chmod +x /usr/local/bin/sass


       ##################
       # Clojure

       curl -fsSL https://download.clojure.org/install/linux-install-1.11.1.1149.sh | bash -


       ##################
       # nodejs

       curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
       apt-get install -y nodejs


       ##################
       # Cleanup

       rm -rf /var/lib/apt/lists/*



  install-project-deps:
    location: /code/
    dependencies:
      - install_base_deps
    input_paths:
      - package.json
      - package-lock.json
      - deps.edn
    output_paths:
      - package-lock.json
      - node_modules
    command: |
      npm install
      clojure -P -M:shadow-cljs
